name: Node.js CI/CD Workflow

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    env:
      # Environment Variables from .env
      PORT: ${{ vars.PORT || '5000' }}
      MONGO_URI: ${{ secrets.MONGO_URI }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      NODE_ENV: ${{ vars.NODE_ENV || 'development' }}
      APP_URL: ${{ vars.APP_URL || 'http://localhost:3000' }}
      OTA_SERVER_URL: ${{ vars.OTA_SERVER_URL }}
      AWS_MQTT_ENDPOINT: ${{ secrets.AWS_MQTT_ENDPOINT }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AUDIO_BUCKET: ${{ vars.AUDIO_BUCKET }}
      IMAGE_BUCKET: ${{ vars.IMAGE_BUCKET }}
      OTA_BUCKET: ${{ vars.OTA_BUCKET }}
      GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
      UNWIREDLABS_API_KEY: ${{ secrets.UNWIREDLABS_API_KEY }}
      EMAIL_USER: ${{ secrets.EMAIL_USER }}
      EMAIL_PASS: ${{ secrets.EMAIL_PASS }}

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install Dependencies
      run: npm ci

    - name: Create .env File
      run: |
        echo "PORT=$PORT" >> .env
        echo "MONGO_URI=$MONGO_URI" >> .env
        echo "JWT_SECRET=$JWT_SECRET" >> .env
        echo "NODE_ENV=$NODE_ENV" >> .env
        echo "APP_URL=$APP_URL" >> .env
        echo "OTA_SERVER_URL=$OTA_SERVER_URL" >> .env
        echo "AWS_MQTT_ENDPOINT=$AWS_MQTT_ENDPOINT" >> .env
        echo "AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID" >> .env
        echo "AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY" >> .env
        echo "AWS_REGION=$AWS_REGION" >> .env
        echo "AUDIO_BUCKET=$AUDIO_BUCKET" >> .env
        echo "IMAGE_BUCKET=$IMAGE_BUCKET" >> .env
        echo "OTA_BUCKET=$OTA_BUCKET" >> .env
        echo "GOOGLE_API_KEY=$GOOGLE_API_KEY" >> .env
        echo "UNWIREDLABS_API_KEY=$UNWIREDLABS_API_KEY" >> .env
        echo "EMAIL_USER=$EMAIL_USER" >> .env
        echo "EMAIL_PASS=$EMAIL_PASS" >> .env

    - name: Run Linter
      run: npm run lint || true

    - name: Run Tests
      run: npm test || true

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Setup SSH
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" > ~/.ssh/deploy_key
        chmod 600 ~/.ssh/deploy_key
        ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

    - name: Deploy to EC2
      env:
        EC2_USERNAME: ${{ secrets.EC2_USERNAME }}
        EC2_HOST: ${{ secrets.EC2_HOST }}
      run: |
        # Deploy application files
        rsync -avz -e "ssh -i ~/.ssh/deploy_key" \
          --exclude '.git' \
          --exclude 'node_modules' \
          --exclude '.env' \
          ./ $EC2_USERNAME@$EC2_HOST:/home/$EC2_USERNAME/app/

    - name: Setup and Restart Application on EC2
      run: |
        ssh -i ~/.ssh/deploy_key ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} '
          cd ~/app
          
          # Install dependencies
          npm ci
          
          # Create .env file with secrets
          echo "PORT=$PORT" > .env
          echo "MONGO_URI=$MONGO_URI" >> .env
          echo "JWT_SECRET=$JWT_SECRET" >> .env
          echo "NODE_ENV=$NODE_ENV" >> .env
          echo "APP_URL=$APP_URL" >> .env
          echo "OTA_SERVER_URL=$OTA_SERVER_URL" >> .env
          echo "AWS_MQTT_ENDPOINT=$AWS_MQTT_ENDPOINT" >> .env
          echo "AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID" >> .env
          echo "AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY" >> .env
          echo "AWS_REGION=$AWS_REGION" >> .env
          echo "AUDIO_BUCKET=$AUDIO_BUCKET" >> .env
          echo "IMAGE_BUCKET=$IMAGE_BUCKET" >> .env
          echo "OTA_BUCKET=$OTA_BUCKET" >> .env
          echo "GOOGLE_API_KEY=$GOOGLE_API_KEY" >> .env
          echo "UNWIREDLABS_API_KEY=$UNWIREDLABS_API_KEY" >> .env
          echo "EMAIL_USER=$EMAIL_USER" >> .env
          echo "EMAIL_PASS=$EMAIL_PASS" >> .env
          
          # Restart application with PM2
          pm2 restart app || pm2 start src/server.js --name "app"
        '

    - name: Application Deployment Notification
      if: success()
      run: echo "🚀 Deployment completed successfully to ${{ secrets.EC2_HOST }}"

    - name: Deployment Failure Notification
      if: failure()
      run: echo "❌ Deployment failed. Check workflow logs for details."